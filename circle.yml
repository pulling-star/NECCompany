version: 2

workflows:
  version: 2
  test:
    jobs:
      - alpine3.14-3.1:
          requires:
            - macos10.15
      - alpine3.14-6.0:
          requires:
      - alpine3.15-6.0:
          requires:
            - macos10.15
      - centos7:
          requires:
            - macos10.15
      - debian9:
          requires:
            - macos10.15
      - debian10:
          requires:
            - macos10.15
      - debian11:
          requires:
            - macos10.15
      - fedora33:
          requires:
            - macos10.15
      - fedora34:
          requires:
            - macos10.15
      - fedora35:
          requires:
            - macos10.15
      - opensuse15:
          requires:
            - macos10.15
      - ubuntu16.04:
          requires:
      - ubuntu18.04:
          requires:
            - macos10.15
      - ubuntu20.04:
          requires:
            - macos10.15
      - macos10.15:
          requires:
            - alpine3.14-6.0
            - ubuntu16.04
          filters:
            branches:
              only:
                - master
      - macos11:
          requires:
            - macos10.15
      - macos12:
          requires:
            - macos10.15

shared:
  environment: &environment
    DOTNET_CLI_TELEMETRY_OPTOUT: 1
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    TERM: dumb
    DEBIAN_FRONTEND: noninteractive
  dotnet-install-3-1: &dotnet-install-3-1
    run:
      name: Install .NET Core 3.1 Runtime
      command: |
        if [ ! -f ~/dotnet-install.sh ]; then curl -fsLo ~/dotnet-install.sh 'https://dot.net/v1/dotnet-install.sh'; fi
        bash ~/dotnet-install.sh --channel 3.1 --version latest --install-dir ~/.dotnet --no-path --runtime dotnet
  dotnet-install-5-0: &dotnet-install-5-0
    run:
      name: Install .NET 5.0 Runtime
      command: |
        if [ ! -f ~/dotnet-install.sh ]; then curl -fsLo ~/dotnet-install.sh 'https://dot.net/v1/dotnet-install.sh'; fi
        bash ~/dotnet-install.sh --channel 5.0 --version latest --install-dir ~/.dotnet --no-path --runtime dotnet
  dotnet-install-6-0: &dotnet-install-6-0
    run:
      name: Install .NET 6.0 SDK
      command: |
        if [ ! -f ~/dotnet-install.sh ]; then curl -fsLo ~/dotnet-install.sh 'https://dot.net/v1/dotnet-install.sh'; fi
        bash ~/dotnet-install.sh --channel 6.0 --version latest --install-dir ~/.dotnet --no-path
        ~/.dotnet/dotnet --info
        echo 'export PATH=~/.dotnet:$PATH' >> $BASH_ENV
  dotnet-info: &dotnet-info
    run:
      name: .NET Info
      command: |
        dotnet --info
  generate-restore-graph: &generate-restore-graph
    run:
      name: Generate Dependency Graph
      command: |
        dotnet msbuild -t:GenerateRestoreGraphFile -p:Version=1.0.0-restore -p:RestoreGraphOutputPath=/tmp/restore.json
        cat /tmp/restore.json
      working_directory: tests
  restore-cache: &restore-cache
    restore_cache:
      keys:
        - 'linux-nuget-packages-{{ checksum "/tmp/restore.json" }}'
        - 'linux-nuget-packages'
  restore-cache-alpine: &restore-cache-alpine
    restore_cache:
      keys:
        - 'alpine-nuget-packages-{{ checksum "/tmp/restore.json" }}'
        - 'alpine-nuget-packages'
  restore-cache-macos: &restore-cache-macos
    restore_cache:
      keys:
        - 'macos-nuget-packages-{{ checksum "/tmp/restore.json" }}'
        - 'macos-nuget-packages'
  dotnet-restore: &dotnet-restore
    run:
      name: Restore Dependencies
      no_output_timeout: 2m
      command: dotnet restore --disable-parallel
  save-cache: &save-cache
    save_cache:
      key: 'linux-nuget-packages-{{ checksum "/tmp/restore.json" }}'
      paths:
        - ~/.nuget/packages
  save-cache-alpine: &save-cache-alpine
    save_cache:
      key: 'alpine-nuget-packages-{{ checksum "/tmp/restore.json" }}'
      paths:
        - ~/.nuget/packages
  save-cache-macos: &save-cache-macos
    save_cache:
      key: 'macos-nuget-packages-{{ checksum "/tmp/restore.json" }}'
      paths:
        - ~/.nuget/packages
  dotnet-test-debug-3-1: &dotnet-test-debug-3-1
    run:
      name: Run unit tests (.NET Core 3.1/Debug)
      command: dotnet test tests -f netcoreapp3.1 -c Debug
  dotnet-test-release-3-1: &dotnet-test-release-3-1
    run:
      name: Run unit tests (.NET Core 3.1/Release)
      command: dotnet test tests -f netcoreapp3.1 -c Release
  dotnet-test-debug-5-0: &dotnet-test-debug-5-0
    run:
      name: Run unit tests (.NET 5.0/Debug)
      command: dotnet test tests -f net5.0 -c Debug
  dotnet-test-release-5-0: &dotnet-test-release-5-0
    run:
      name: Run unit tests (.NET 5.0/Release)
      command: dotnet test tests -f net5.0 -c Release
  dotnet-test-debug-6-0: &dotnet-test-debug-6-0
    run:
      name: Run unit tests (.NET 6.0/Debug)
      command: dotnet test tests -f net6.0 -c Debug
  dotnet-test-release-6-0: &dotnet-test-release-6-0
    run:
      name: Run unit tests (.NET 6.0/Release)
      command: dotnet test tests -f net6.0 -c Release

jobs:

  alpine3.14-3.1:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:3.1-alpine3.14
    environment: *environment
    steps:
      - *dotnet-info
      - checkout
      - *generate-restore-graph
      - *restore-cache-alpine
      - *dotnet-restore
      - *save-cache-alpine
      - *dotnet-test-debug-3-1
      - *dotnet-test-release-3-1

  alpine3.14-6.0:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0-alpine3.14
    environment: *environment
    steps:
      - *dotnet-info
      - checkout
      - *generate-restore-graph
      - *restore-cache-alpine
      - *dotnet-restore
      - *save-cache-alpine
      - *dotnet-test-debug-6-0
      - *dotnet-test-release-6-0

  alpine3.15-6.0:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0-alpine3.15
    environment: *environment
    steps:
      - *dotnet-info
      - checkout
      - *generate-restore-graph
      - *restore-cache-alpine
      - *dotnet-restore
      - *save-cache-alpine
      - *dotnet-test-debug-6-0
      - *dotnet-test-release-6-0

  centos7:
    docker:
      - image: centos:7
    environment: *environment
    steps:
      - run:
          name: Install Prerequisites
          no_output_timeout: 2m
          command: yum install -q -y curl ca-certificates libicu
      - *dotnet-install-3-1
      - *dotnet-install-5-0
      - *dotnet-install-6-0
      - checkout
      - *generate-restore-graph
      - *restore-cache
      - *dotnet-restore
      - *save-cache
      - *dotnet-test-debug-6-0
      - *dotnet-test-release-6-0
      - *dotnet-test-debug-5-0
      - *dotnet-test-release-5-0
      - *dotnet-test-debug-3-1
      - *dotnet-test-release-3-1

  debian9:
    docker:
      - image: debian:9
    environment: *environment
    steps:
      - run:
          name: Install Prerequisites
          no_output_timeout: 2m
          command: |
            apt-get -qq update
            apt-get -qq install --yes --no-install-recommends curl ca-certificates apt-transport-https gettext
      - *dotnet-install-3-1
      - *dotnet-install-5-0
      - *dotnet-install-6-0
      - checkout
      - *generate-restore-graph
      - *restore-cache
      - *dotnet-restore
      - *save-cache
      - *dotnet-test-debug-6-0
      - *dotnet-test-release-6-0
      - *dotnet-test-debug-5-0
      - *dotnet-test-release-5-0
      - *dotnet-test-debug-3-1
      - *dotnet-test-release-3-1

  debian10:
    docker:
      - image: debian:10
    environment: *environment
    steps:
      - run:
          name: Install Prerequisites
          no_output_timeout: 2m
          command: |
            apt-get -qq update
            apt-get -qq install --yes --no-install-recommends curl ca-certificates apt-transport-https gettext
      - *dotnet-install-3-1
      - *dotnet-install-5-0
      - *dotnet-install-6-0
      - checkout
      - *generate-restore-graph
      - *restore-cache
      - *dotnet-restore
      - *save-cache
      - *dotnet-test-debug-6-0
      - *dotnet-test-release-6-0
      - *dotnet-test-debug-5-0
      - *dotnet-test-release-5-0
      - *dotnet-test-debug-3-1
      - *dotnet-test-release-3-1

  debian11:
    docker:
      - image: debian:11
    environment: *environment
    steps:
      - run:
          name: Install Prerequisites
          no_output_timeout: 2m
          command: |
            apt-get -qq update
            apt-get -qq install --yes --no-install-recommends curl ca-certificates apt-transport-https gettext
      - *dotnet-install-3-1
      - *dotnet-install-5-0
      - *dotnet-install-6-0
      - checkout
      - *generate-restore-graph
      - *restore-cache
      - *dotnet-restore
      - *save-cache
      - *dotnet-test-debug-6-0
      - *dotnet-test-release-6-0
      - *dotnet-test-debug-5-0
      - *dotnet-test-release-5-0
      - *dotnet-test-debug-3-1
      - *dotnet-test-release-3-1

  fedora33:
    docker:
      - image: fedora:33
    environment: *environment
    steps:
      - run:
          name: Install Prerequisites
          no_output_timeout: 2m
          command: dnf install -q -y curl ca-certificates findutils ncurses libicu compat-openssl10
      - *dotnet-install-3-1
      - *dotnet-install-5-0
      - *dotnet-install-6-0
      - checkout
      - *generate-restore-graph
      - *restore-cache
      - *dotnet-restore
      - *save-cache
      - *dotnet-test-debug-6-0
      - *dotnet-test-release-6-0
      - *dotnet-test-debug-5-0
      - *dotnet-test-release-5-0
      - *dotnet-test-debug-3-1
      - *dotnet-test-release-3-1

  fedora34:
    docker:
      - image: fedora:34
    environment: *environment
    steps:
      - run:
          name: Install Prerequisites
          no_output_timeout: 2m
          command: dnf install -q -y curl ca-certificates findutils ncurses libicu openssl-libs
      - *dotnet-install-3-1
      - *dotnet-install-5-0
      - *dotnet-install-6-0
      - checkout
      - *generate-restore-graph
      - *restore-cache
      - *dotnet-restore
      - *save-cache
      - *dotnet-test-debug-6-0
      - *dotnet-test-release-6-0
      - *dotnet-test-debug-5-0
      - *dotnet-test-release-5-0
      - *dotnet-test-debug-3-1
      - *dotnet-test-release-3-1

  fedora35:
    docker:
      - image: fedora:35
    environment: *environment
    steps:
      - run:
          name: Install Prerequisites
          no_output_timeout: 2m
          command: dnf install -q -y curl ca-certificates findutils ncurses libicu openssl-libs
      - *dotnet-install-3-1
      - *dotnet-install-5-0
      - *dotnet-install-6-0
      - checkout
      - *generate-restore-graph
      - *restore-cache
      - *dotnet-restore
      - *save-cache
      - *dotnet-test-debug-6-0
      - *dotnet-test-release-6-0
      - *dotnet-test-debug-5-0
      - *dotnet-test-release-5-0
      - *dotnet-test-debug-3-1
      - *dotnet-test-release-3-1

  opensuse15:
    docker:
      - image: opensuse/leap:15.2
    environment: *environment
    steps:
      - run:
          name: Install Prerequisites
          no_output_timeout: 2m
          command: zypper -q install -y --no-recommends curl ca-certificates gzip tar ncurses-utils libicu-suse65_1
      - *dotnet-install-3-1
      - *dotnet-install-5-0
      - *dotnet-install-6-0
      - checkout
      - *generate-restore-graph
      - *restore-cache
      - *dotnet-restore
      - *save-cache
      - *dotnet-test-debug-6-0
      - *dotnet-test-release-6-0
      - *dotnet-test-debug-5-0
      - *dotnet-test-release-5-0
      - *dotnet-test-debug-3-1
      - *dotnet-test-release-3-1

  ubuntu16.04:
    docker:
      - image: ubuntu:16.04
    environment: *environment
    steps:
      - run:
          name: Install Prerequisites
          no_output_timeout: 2m
          command: |
            apt-get -qq update
            apt-get -qq install --yes --no-install-recommends curl ca-certificates apt-transport-https gettext libicu55 libcurl3
      - *dotnet-install-3-1
      - *dotnet-install-5-0
      - *dotnet-install-6-0
      - checkout
      - *generate-restore-graph
      - *restore-cache
      - *dotnet-restore
      - *save-cache
      - *dotnet-test-debug-6-0
      - *dotnet-test-release-6-0
      - *dotnet-test-debug-5-0
      - *dotnet-test-release-5-0
      - *dotnet-test-debug-3-1
      - *dotnet-test-release-3-1

  ubuntu18.04:
    docker:
      - image: ubuntu:18.04
    environment: *environment
    steps:
      - run:
          name: Install Prerequisites
          no_output_timeout: 2m
          command: |
            apt-get -qq update
            apt-get -qq install --yes --no-install-recommends curl ca-certificates apt-transport-https gettext libicu60 libssl1.0.0
      - *dotnet-install-3-1
      - *dotnet-install-5-0
      - *dotnet-install-6-0
      - checkout
      - *generate-restore-graph
      - *restore-cache
      - *dotnet-restore
      - *save-cache
      - *dotnet-test-debug-6-0
      - *dotnet-test-release-6-0
      - *dotnet-test-debug-5-0
      - *dotnet-test-release-5-0
      - *dotnet-test-debug-3-1
      - *dotnet-test-release-3-1

  ubuntu20.04:
    docker:
      - image: ubuntu:20.04
    environment: *environment
    steps:
      - run:
          name: Install Prerequisites
          no_output_timeout: 2m
          command: |
            apt-get -qq update
            apt-get -qq install --yes --no-install-recommends curl ca-certificates apt-transport-https gettext libicu66
      - *dotnet-install-3-1
      - *dotnet-install-5-0
      - *dotnet-install-6-0
      - checkout
      - *generate-restore-graph
      - *restore-cache
      - *dotnet-restore
      - *save-cache
      - *dotnet-test-debug-6-0
      - *dotnet-test-release-6-0
      - *dotnet-test-debug-5-0
      - *dotnet-test-release-5-0
      - *dotnet-test-debug-3-1
      - *dotnet-test-release-3-1

  macos10.15:
    macos:
      xcode: "12.4.0"
    environment: *environment
    steps:
      - *dotnet-install-3-1
      - *dotnet-install-5-0
      - *dotnet-install-6-0
      - checkout
      - *generate-restore-graph
      - *restore-cache-macos
      - *dotnet-restore
      - *save-cache-macos
      - *dotnet-test-debug-6-0
      - *dotnet-test-release-6-0
      - *dotnet-test-debug-5-0
      - *dotnet-test-release-5-0
      - *dotnet-test-debug-3-1
      - *dotnet-test-release-3-1
      
  macos11:
    macos:
      xcode: "13.2.1"
    environment: *environment
    steps:
      - *dotnet-install-3-1
      - *dotnet-install-5-0
      - *dotnet-install-6-0
      - checkout
      - *generate-restore-graph
      - *restore-cache-macos
      - *dotnet-restore
      - *save-cache-macos
      - *dotnet-test-debug-6-0
      - *dotnet-test-release-6-0
      - *dotnet-test-debug-5-0
      - *dotnet-test-release-5-0
      - *dotnet-test-debug-3-1
      - *dotnet-test-release-3-1
      
  macos12:
    macos:
      xcode: "13.3.0"
    environment: *environment
    steps:
      - *dotnet-install-3-1
      - *dotnet-install-5-0
      - *dotnet-install-6-0
      - checkout
      - *generate-restore-graph
      - *restore-cache-macos
      - *dotnet-restore
      - *save-cache-macos
      - *dotnet-test-debug-6-0
      - *dotnet-test-release-6-0
      - *dotnet-test-debug-5-0
      - *dotnet-test-release-5-0
      - *dotnet-test-debug-3-1
      - *dotnet-test-release-3-1
